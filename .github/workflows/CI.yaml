name: CI

on:
  push:
    branches:
      - "*"

env:
  DB_DATABASE: test_db
  DB_USER: root
  DB_PASSWORD: root

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.base_ref != 'refs/heads/main'
    steps:
      - name: Récupération du code
        uses: actions/checkout@v4.1.7

      - name: Install npm
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.15.1

      - name: Install npm dependencies
        run: npm ci

      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 api.eso-status.local" | sudo tee -a /etc/hosts

      - name: Create env file
        run: |
          cat .env.example > .env
          sed -i -e "s/__NODE_ENV__/testing/g" ./.env
          sed -i -e "s/__APP_NAME__/eso-status/g" ./.env
          sed -i -e "s/__APP_PROTOCOL__/http/g" ./.env
          sed -i -e "s/__APP_HOST__/localhost/g" ./.env
          sed -i -e "s/__APP_PORT__/3000/g" ./.env
          sed -i -e "s/__SSL_PRIVATE__//g" ./.env
          sed -i -e "s/__SSL_CERTIFICATE__//g" ./.env
          sed -i -e "s/__SSL_CA_BUNDLE__//g" ./.env
          sed -i -e "s/__DB_TYPE__/sqlite/g" ./.env
          sed -i -e "s/__DB_HOST__//g" ./.env
          sed -i -e "s/__DB_PORT__//g" ./.env
          sed -i -e "s#__DB_NAME__#src/database/dev#g" ./.env
          sed -i -e "s/__DB_USER__//g" ./.env
          sed -i -e "s/__DB_PASSWORD__//g" ./.env
          sed -i -e "s/__DB_DEBUG__/false/g" ./.env
          sed -i -e "s/__FORUM_MESSAGE_UPDATE_INTERVAL__/1000/g" ./.env
          sed -i -e "s/__LIVE_SERVICES_UPDATE_INTERVAL__/1000/g" ./.env
          sed -i -e "s/__SERVICE_ALERTS_UPDATE_INTERVAL__/1000/g" ./.env
          sed -i -e "s/__QUEUE_INTERVAL__/10000/g" ./.env
          sed -i -e "s/__AWS_ACCESS_KEY_ID__/$AWS_ACCESS_KEY_ID/g" ./.env
          sed -i -e "s/__AWS_SECRET_ACCESS_KEY__/$AWS_SECRET_ACCESS_KEY/g" ./.env
          sed -i -e "s/__AWS_REGION__/$AWS_REGION/g" ./.env
          sed -i -e "s/__CLOUDWATCH_GROUP_NAME__/$CLOUDWATCH_GROUP_NAME/g" ./.env
          sed -i -e "s/__CLOUDWATCH_STREAM_NAME__/$CLOUDWATCH_STREAM_NAME/g" ./.env

      - name: Build assets
        run: npm run build

      - name: Run linter
        run: npm run lint

      - name: Run database migration
        run: npm run migration:run

      - name: Run seeders
        run: npm run seed

      - name: Run test
        run: npm run test:cov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
